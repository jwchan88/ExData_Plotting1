a
a <- available.packages()
head(rownames(a), 3)
install.packages(c("slidify", "ggplot2", "devtools"))
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages(c("slidify", "ggplot2", "devtools"))
install.packages(c("slidify", "ggplot2", "devtools"))
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
library(devtools)
find_rtools()
install.packages("KernSmooth")
load("KernSmooth")
load(KernSmooth)
library(KernSmooth)
cube <- function(x,n) {x^3}
cube(3)
x <- 1:10
if(x>5){x<-0}
f <- function(x){g<- function(y){y+z}z<-4 x+g(x)}
f <- function(x){g<- function(y){y+z}z<-4;x+g(x)}
f <- function(x){g<- function(y){y+z};z<-4;x+g(x)}
z<-10
f(3)
x<-5
y<-if(x<3){NA}else{10}
y
library(datasets)
data(iris)
?iris
mean(iris[1])
mean(iris$Sepal.Length)
apply(iris,5,mean)
iris
iris2 <- iris[Species=="virginica"]
iris2 <- iris[iris$Species=="virginica"]
iris2 <- iris[iris[5]=="virginica"]
iris2
iris2 <- data.frame()
iris2 <- iris[iris[5]=="virginica"]
iris2 <- iris[iris[5]=="virginica",c(1,)]
iris2 <- iris[iris[5]=="virginica",c(1, )]
iris2 <- subset(iris, Species = "virginica", select = Sepal.Length)
iris2 <- subset(iris, Species == "virginica", select = Sepal.Length)
mean(iris2)
iris2
mean(iris2[1])
iris2[1]
mean(iris2[1])
iris2
iris2$Sepal.Length
mean(iris2$Sepal.Length)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls
ls
with(mtcars, tapply(mpg, cyl, mean))
seq1 <- seq(1:4)
asd
as
library(openxlsx)
getwd()
setwd("Desktop/Getting and Cleaning Data")
help(openxlsx)
read.xlsx("quiz1.xlsx", rows=[18:23], cols=[7:15])
read.xlsx("quiz1.xlsx", rows=(18:23), cols=(7:15)
)
read.xlsx("quiz1.xlsx", rows=(18:23), cols=(7:15)) <- dat
dat <- read.xlsx("quiz1.xlsx", rows=(18:23), cols=(7:15))
sum(dat$Zip*dat$Ext,na.rm=T)
library(xml)
library(XML)
fileUrl="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(file=fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl="http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[2]]
rootNode[[1]][[1]][[2]]
zipcode <- xpathSApply(rootNode,"//zipcode",xmlValue)
length(zipcode[zipcode==21231])
DT <- fread("quiz1q5.csv")
library(data.table)
help(fread)
library(data.table)
install.packages("data.table")
library(data.table)
DT <- fread("quiz1q5.csv")
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
tapply(DT$pwgtp15,DT$SEX,mean)
length(zipcode[zipcode==21231])
getwd()
setwd(./Desktop/Data Science)
setwd("./Desktop/Data Science")
setwd("../Desktop/Data Science")
setwd("..")
getwd()
setwd("..")
getwd()
setwd("Desktop/Data Science")
setwd("Exploratory Data Analysis")
getwd()
list.files()
setwd("ExData")
setwd("ExData_Plotting1")
data <- read.table("./household_power_consumption.txt")
data <- read.table("../household_power_consumption.txt")
?read.csv
?dev.copy
getwd()
load(plot1.R)
load("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
dataFull <- read.table(dataFile, header = TRUE, sep = ";")
source("plot1.R")
data <- dataFull[dataFull$Date == "1/2/2007" & dataFull$Date == "2/2/2007"]
head(data)
data <- dataFull[dataFull$Date == "1/2/2007" & dataFull$Date == "2/2/2007", ]
head(data)
data <- dataFull[dataFull$Date == "1/2/2007" & dataFull$Date == "2/2/2007", ]
data <- dataFull[dataFull$Date in c("1/2/2007","2/2/2007"), ]
data <- dataFull[dataFull$Date %in% c("1/2/2007","2/2/2007"), ]
data <- dataFull[dataFull$Date %in% "1/2/2007" & dataFull$Date %in% "2/2/2007", ]
data <- dataFull[dataFull$Date == "1/2/2007", ]
data <- dataFull[dataFull$Date == "1/2/2007" && dataFull$Date == "2/2/2007", ]
source("plot1.R")
head(data)
hist(data$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red")
global_active_power <- as.numeric(data$Global_active_power)
hist(global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red")
?read.table
source("plot1.R")
source("plot1.R")
data$Global_active_power
global_active_power <- as.numeric(data$Global_active_power)
global_active_power
source("plot1.R")
?strptime
?plot
source("plot2.R")
datetime <- strptime(paste(as.Date(data$Date), data$Time), "%d/%m/%Y %H:%M:%S")
datetime
datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
datetime
source("plot2.R")
plot(datetime~as.numeric(data$Global_active_power), type = 1, xlab = "", ylab = "Global Active Power (kilowatts)")
plot(datetime, as.numeric(data$Global_active_power), type = 1, xlab = "", ylab = "Global Active Power (kilowatts)")
plot(datetime, as.numeric(data$Global_active_power), type = "1", xlab = "", ylab = "Global Active Power (kilowatts)")
?plot
plot(datetime, as.numeric(data$Global_active_power), type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
source("plot2.R")
source("plot3.R")
?legend
source("plot3.R")
source("plot3.R")
?legend
source("plot4.R")
source("plot4.R")
source("plot4.R")
